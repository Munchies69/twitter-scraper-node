const pathToExportly =
  "C:/Users/10cam/AppData/Local/Google/Chrome/User Data/Default/Extensions/hbibehafoapglhcgfhlpifagloecmhfh/2.21_0";
  const puppeteer = require('puppeteer-extra');
  const StealthPlugin = require('puppeteer-extra-plugin-stealth');
  puppeteer.use(StealthPlugin());
  
  const path = require('path');
  
  async function waitForLoginComplete(page, timeout = 60000) {
    const startTime = Date.now();
    while (Date.now() - startTime < timeout) {
      const url = page.url();
      if (!url.includes('twitter.com/login') && !url.includes('twitter.com/i/flow/login')) {
        try {
          await page.waitForSelector('a[aria-label="Profile"]', { timeout: 5000 });
          return true; // Login successful
        } catch (e) {
          // Element not found, continue waiting
        }
      }
      await page.waitForTimeout(1000);
    }
    throw new Error('Login timeout');
  }
  
  async function navigateToProfile(page, username, timeout = 30000) {
    await page.goto(`https://twitter.com/${username}`, { waitUntil: 'domcontentloaded' });
    
    const startTime = Date.now();
    while (Date.now() - startTime < timeout) {
      try {
        // Wait for an element that's typically present on a profile page
        await page.waitForSelector('div[data-testid="primaryColumn"]', { timeout: 5000 });
        return true; // Navigation successful
      } catch (e) {
        // Element not found, reload and try again
        await page.reload({ waitUntil: 'domcontentloaded' });
      }
      await page.waitForTimeout(1000);
    }
    throw new Error('Profile navigation timeout');
  }
  
  async function automatedTwExportly(username, twitterUsername, twitterPassword) {
    const extensionPath = pathToExportly;
  
    const browser = await puppeteer.launch({
      headless: false,
      args: [
        `--disable-extensions-except=${extensionPath}`,
        `--load-extension=${extensionPath}`,
        '--enable-automation'
      ]
    });
  
    try {
      const page = await browser.newPage();
  
      // Twitter Login
      await page.goto('https://twitter.com/i/flow/login', { waitUntil: 'domcontentloaded' });
  
      // Enter username
      await page.waitForSelector('input[autocomplete="username"]', { visible: true });
      await page.type('input[autocomplete="username"]', twitterUsername, { delay: 50 });
      await page.keyboard.press('Enter');
  
      // Enter password
      await page.waitForSelector('input[name="password"]', { visible: true });
      await page.type('input[name="password"]', twitterPassword, { delay: 50 });
      await page.keyboard.press('Enter');
  
      // Wait for login to complete
      await waitForLoginComplete(page);
      console.log('Successfully logged in to Twitter');
  
      // Navigate to the user's Twitter profile
      await navigateToProfile(page, username);
      console.log(`Successfully navigated to ${username}'s profile`);
  
      // Wait for TwExportly to initialize (you might need to adjust the selector)
      await page.waitForSelector('#twexportly-button', { timeout: 10000 });
  
      // Click the TwExportly button
      await page.click('#twexportly-button');
  
      // Wait for the export options to appear (adjust selector as needed)
      await page.waitForSelector('#twexportly-export-options', { timeout: 5000 });
  
      // Select 'Tweets' option (adjust selector as needed)
      await page.click('#twexportly-tweets-option');
  
      // Click the export button (adjust selector as needed)
      await page.click('#twexportly-export-button');
  
      // Wait for the export to complete (you might need to implement a more robust way to detect completion)
      await page.waitForSelector('#twexportly-export-complete', { timeout: 300000 }); // 5 minutes timeout
  
      console.log(`Export completed for user: ${username}`);
  
      // You can add code here to handle the exported data, e.g., downloading a file
  
    } catch (error) {
      console.error('An error occurred:', error);
    } finally {
      // Close the browser
      await browser.close();
    }
  }
  
// Usage
const username = "MrMunchies69"; // Replace with the desired Twitter username to export
const twitterUsername = "munchies69@protonmail.com";
const twitterPassword = ".V=1L>v@JvXtv:V-";
automatedTwExportly(username, twitterUsername, twitterPassword);
